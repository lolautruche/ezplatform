sudo: required
dist: trusty
language: generic

services:
  - docker

env:
  global:
    # TODO: For deployment we would need to build & test against prod env, need to balance that against debug ci needs
    - SYMFONY_ENV=behat
    - SYMFONY_DEBUG=1
    - DATABASE_USER=ezp
    - DATABASE_PASSWORD=ezp
    - DATABASE_NAME=behattestdb
    - DATABASE_HOST=db
  # list of behat arguments to test
  matrix:
    - ARGS="--profile=rest --suite=fullJson"
    - ARGS="--profile=rest --suite=fullXml"
    - ARGS="--profile=core"

# test only master (+ Pull requests)
branches:
  only:
    - master

# Update Docker Composee to 1.5.2 (basic variable substituation, while still supporting Docker 1.8.2 as used by travis)
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  # Build (first generate what we want in php image to check requriments, then build it in a plain volume image)
  - docker run -v `pwd`:/var/www -w /var/www -e SYMFONY_ENV ezsystems/php:7.0-v0.4 /bin/sh -c "
      composer config -g github-oauth.github.com "d0285ed5c8644f30547572ead2ed897431c1fc09";
      composer install --no-progress --no-interaction --prefer-dist"
  - docker build -f bin/.docker/Dockerfile -t ezsystems/ezplatform_volume:latest .
  # Run (start contianers, execute install command and dump assets)
  - export COMPOSE_FILE="bin/.docker/docker-compose.yml"
  - docker-compose --verbose up -d --no-recreate
  - docker-compose --verbose run -u ez --rm phpfpm1 /bin/sh -c "ls -al; php /scripts/wait_for_db.php; php app/console ezplatform:install clean; php app/console assetic:dump"


# execute behat as the script command
# using behat.yml which is a copy of behat.yml.dist with hostnames update by docker-compose.yml
script:
  - docker-compose run -u ez --rm behatphpcli bin/behat -vv $ARGS --tags=~@broken

# disable mail notifications
notifications:
  email: false

# reduce depth (history) of git checkout
git:
  depth: 30
